/* CDP-Template 2015-06-09 */
!function(a,b){"function"==typeof define&&define.amd?define(["cdp.promise"],function(){return b(a.CDP||(a.CDP={}))}):b(a.CDP||(a.CDP={}))}(this,function(a){a.NativeBridge=a.NativeBridge||{};var a;!function(a){var b;!function(b){var c="[CDP.NativeBridge.Utils] ",d=function(){function d(){}return d.defineResultCode=function(c){Object.defineProperty(b,c,{get:function(){return d.s_pluginReady?a.Plugin.NativeBridge[c]:null},enumerable:!0,configurable:!0})},d.waitForPluginReady=function(){var b=$.Deferred();if(d.s_pluginReady)return $.Deferred().resolve();try{require(["cordova"],function(){var e=cordova.require("cordova/channel");e.onCordovaReady.subscribe(function(){null!=a.Plugin.NativeBridge?(d.s_pluginReady=!0,b.resolve()):(console.error(c+"'com.sony.cdp.plugin.nativebridge' cordova plugin required."),b.reject())})})}catch(e){console.error(c+"cordova required."),b.reject()}return b.promise()},d.makePromise=function(b){return a.makePromise(b,{_bridge:null,_taskId:null,abort:function(a){var d=this,e=$.extend({message:"abort"},a),f=function(){null!=d._bridge&&null!=d._taskId&&d._bridge.cancel(d._taskId,e),b.reject(e)};null!=this.dependency?(this.dependency.abort?this.dependency.abort(e):console.error(c+"[call] dependency object doesn't have 'abort()' method."),this.callReject&&"pending"===this.state()&&f()):"pending"===this.state()&&f()}})},d.s_pluginReady=!1,d}();b.Utils=d}(b=a.NativeBridge||(a.NativeBridge={}))}(a||(a={}));var a;!function(a){var b;!function(b){var c="[CDP.NativeBridge.Gate] ";b.SUCCESS_OK,b.Utils.defineResultCode("SUCCESS_OK"),b.SUCCESS_PROGRESS,b.Utils.defineResultCode("SUCCESS_PROGRESS"),b.ERROR_FAIL,b.Utils.defineResultCode("ERROR_FAIL"),b.ERROR_CANCEL,b.Utils.defineResultCode("ERROR_CANCEL"),b.ERROR_INVALID_ARG,b.Utils.defineResultCode("ERROR_INVALID_ARG"),b.ERROR_NOT_IMPLEMENT,b.Utils.defineResultCode("ERROR_NOT_IMPLEMENT"),b.ERROR_NOT_SUPPORT,b.Utils.defineResultCode("ERROR_NOT_SUPPORT"),b.ERROR_INVALID_OPERATION,b.Utils.defineResultCode("ERROR_INVALID_OPERATION"),b.ERROR_CLASS_NOT_FOUND,b.Utils.defineResultCode("ERROR_CLASS_NOT_FOUND"),b.ERROR_METHOD_NOT_FOUND,b.Utils.defineResultCode("ERROR_METHOD_NOT_FOUND");var d=function(){function d(d,e){var f=this;b.Utils.waitForPluginReady().then(function(){f._bridge=new a.Plugin.NativeBridge(d,e)}).fail(function(){throw Error(c+"'com.sony.cdp.plugin.nativebridge' required.")})}return d.prototype.exec=function(a,c,d){var e=this,f=$.Deferred(),g=b.Utils.makePromise(f);return b.Utils.waitForPluginReady().then(function(){var h=e._bridge.exec(function(a){b.SUCCESS_PROGRESS===a.code?f.notify(a):f.resolve(a)},function(a){f.reject(a)},a,c,d);g._bridge=e._bridge,g._taskId=h}).fail(function(){f.reject(e.makeFatal())}),g},d.prototype.cancel=function(a){var c=this,d=$.Deferred();return b.Utils.waitForPluginReady().then(function(){c._bridge.cancel(null,a,function(a){d.resolve(a)},function(a){d.reject(a)})}).fail(function(){d.reject(c.makeFatal())}),d.promise()},d.prototype.dispose=function(a){var c=this,d=$.Deferred();return b.Utils.waitForPluginReady().then(function(){c._bridge.dispose(a,function(a){d.resolve(a)},function(a){d.reject(a)})}).fail(function(){d.reject(c.makeFatal())}),d.promise()},Object.defineProperty(d.prototype,"bridge",{get:function(){return this._bridge},enumerable:!0,configurable:!0}),d.prototype.makeFatal=function(){var a=c+"fatal error. 'com.sony.cdp.plugin.nativebridge' is not available.";return console.error(a),{code:null,name:c+"ERROR_FATAL",message:a}},d}();b.Gate=d}(b=a.NativeBridge||(a.NativeBridge={}))}(a||(a={}));var a;return function(a){var b;!function(b){!function(c){c.Config.DEBUG&&!c.orientation&&(null==a.Plugin||null==a.Plugin.NativeBridge)&&(b.Utils.waitForPluginReady=function(){return $.Deferred().resolve()},function(){var b=function(a){var b={code:0,name:"[CDP.NativeBridge.Patch]",message:"[CDP.NativeBridge.Patch] generated by stub object."};null!=a&&setTimeout(function(){a(b)})},c=function(){function a(a,b){}return a.prototype.exec=function(a,c,d,e,f){b(a)},a.prototype.cancel=function(a,c,d,e){b(d)},a.prototype.dispose=function(a,c,d){b(c)},a.SUCCESS_OK=0,a.SUCCESS_PROGRESS=1,a.ERROR_FAIL=2,a.ERROR_CANCEL=3,a.ERROR_INVALID_ARG=4,a.ERROR_NOT_IMPLEMENT=5,a.ERROR_NOT_SUPPORT=6,a.ERROR_INVALID_OPERATION=7,a.ERROR_CLASS_NOT_FOUND=8,a.ERROR_METHOD_NOT_FOUND=9,a}();a.Plugin=a.Plugin||{},a.Plugin.NativeBridge=c}())}(window)}(b=a.NativeBridge||(a.NativeBridge={}))}(a||(a={})),a.NativeBridge});