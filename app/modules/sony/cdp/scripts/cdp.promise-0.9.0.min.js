/*!
 * cdp.promise.js 0.9.0
 *
 * Date: 2015-08-26T14:28:55
 */
!function(a,b){"function"==typeof define&&define.amd?define(["jquery"],function(c){return b(a.CDP||(a.CDP={}),c)}):"object"==typeof exports?module.exports=b(a.CDP||(a.CDP={}),require("jquery")):b(a.CDP||(a.CDP={}),a.jQuery||a.$)}((this||0).self||global,function(a,b){var a;return function(a){function c(a,c){var d=function(b){var c=b?b:{message:"abort"};null!=this.dependency?(this.dependency.abort?this.dependency.abort(c):console.error(e+"[call] dependency object doesn't have 'abort()' method."),this.callReject&&"pending"===this.state()&&a.reject(c)):"pending"===this.state()&&a.reject(c)},f=function(a){var b=this;return a.abort?(this.dependency=a,a.always(function(){b.dependency=null})):console.error(e+"[set] dependency object doesn't have 'abort()' method."),a},g=b.extend({},{dependency:null,callReject:!1},c),h=a.promise(g);return null==h.abort&&(h.abort=d.bind(h)),null==h.dependOn&&(h.dependOn=f.bind(h)),h}function d(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];var d=[].concat.apply([],a),e=b.Deferred(),f=[],g=!1,h=function(){return g?!f.some(function(a){return"pending"===a.status}):!1};return d.forEach(function(a,b){f.push({status:"pending",args:null}),a.then(function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];f[b].status="resolved",f[b].args=a},function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];f[b].status="rejected",f[b].args=a}).always(function(){h()&&e.resolve(f)})}),g=!0,h()&&e.resolve(f),e.promise()}var e="[CDP.Promise] ";a.makePromise=c,a.wait=d;var f=function(){function a(){this._pool=[],this._id=0}return a.prototype.add=function(a){var b=this;if(null==a)return null;if(!a.abort)return console.error(e+"[add] promise object doesn't have 'abort()' method."),a;var c={promise:a,id:this._id++};return this._pool.push(c),a.always(function(){b._pool=b._pool.filter(function(a){return a.id!==c.id?!0:!1})}),a},a.prototype.cancel=function(a){var b=this.promises();return b.forEach(function(b){b.abort&&b.abort(a)}),d.apply(null,b)},a.prototype.promises=function(){return this._pool.map(function(a){return a.promise})},a}();a.PromiseManager=f}(a||(a={})),a});